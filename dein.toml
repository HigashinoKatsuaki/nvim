[[plugins]]
repo = 'roxma/nvim-yarp'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent> <Space>d :Defx -split=vertical -winwidth=30 -direction=topleft -columns=git:icons:mark:indent:filename:type -search=`expand('%:p')`<CR>
  autocmd FileType defx call s:defx_my_settings()
    function! s:defx_my_settings() abort
      call defx#custom#column('icon', {
      \ 'directory_icon': '▸',
      \ 'opened_icon': '▾',
      \ 'root_icon': ' ',
      \ })

      nnoremap <silent><buffer><expr> <CR> defx#do_action('drop')
      nnoremap <silent><buffer><expr> c defx#do_action('copy')
      nnoremap <silent><buffer><expr> m defx#do_action('move')
      nnoremap <silent><buffer><expr> p defx#do_action('paste')
      nnoremap <silent><buffer><expr> o defx#do_action('open_or_close_tree')
      nnoremap <silent><buffer><expr> x defx#do_action('close_tree')
      nnoremap <silent><buffer><expr> K defx#do_action('new_directory')
      nnoremap <silent><buffer><expr> a defx#do_action('new_file')
      nnoremap <silent><buffer><expr> d defx#do_action('remove')
      nnoremap <silent><buffer><expr> r defx#do_action('rename')
      nnoremap <silent><buffer><expr> yy defx#do_action('yank_path')
      nnoremap <silent><buffer><expr> . defx#do_action('toggle_ignored_files')
      nnoremap <silent><buffer><expr> q defx#do_action('quit')
      nnoremap <silent><buffer><expr> R defx#do_action('redraw')
  endfunction
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'kristijanhusak/defx-git'

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
  let g:solarized_termcolors=256
  colorscheme solarized
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
 
[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview('right:50%', 'ctrl-p'), <bang>0)
  nnoremap <Space>f :Files<CR>
  nnoremap <Space>f :FZF<CR>
  nnoremap <Space>b :Buffers<CR>
  command! -bang -nargs=? -complete=dir GFiles
    \ call fzf#vim#gitfiles(<q-args>, fzf#vim#with_preview(), <bang>0)
  nnoremap <C-p> :GFiles<CR>
  nnoremap <C-s> :GFiles?<CR>
  command! -bang -nargs=* Ag
    \ call fzf#vim#ag(<q-args>,
    \                 <bang>0 ? fzf#vim#with_preview('up:60%')
    \                         : fzf#vim#with_preview('right:50%:hidden', '?'),
    \                 <bang>0)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap g1 :diffput<CR>:w<CR>
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
	\ }
'''

[[plugins]]
repo = 'jpo/vim-railscasts-theme'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kassio/neoterm'

[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
merged = '0'
hook_add = '''
  nnoremap <silent> gd <Plug>(coc-definition)
  nnoremap <silent> gr <Plug>(coc-references)
  nnoremap <silent>cr <Plug>(coc-rename)
'''
